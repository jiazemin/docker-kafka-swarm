# TODO
# - SET LB domain name with KAFKA_ADVERTISED_LISTENERS
version: '3.4'
services:
  # https://github.com/wurstmeister/kafka-docker
  kafka:
    image: wurstmeister/kafka:1.1.0
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
      #- 9094:9094
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints: &kafka_constraints
          - node.role == worker
          - node.labels.is_virtual == true
      resources:
        reservations:
          cpus: '0.3'
          memory: '2G'
        limits:
          cpus: '0.5'
          memory: '3G'
    environment:
      #HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      HOSTNAME_COMMAND: "docker info | grep \"Node Address:\" | cut -d' ' -f 4"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: "INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094"
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: ${KAFKA_AUTO_CREATE_TOPIC:-false}
      KAFKA_HEAP_OPTS: "-Xmx2G -Xms2G"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=1099 -Dcom.sun.management.jmxremote"
      JMX_PORT: 1099
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: start-kafka.sh
        target: /usr/bin/start-kafka.sh
        mode: 0755
    networks:
      - kafka
      - zookeeper
  kafka-manager:
    image: sheepkiller/kafka-manager:latest
    depends_on:
      - kafka
    environment:
      ZK_HOSTS: "zookeeper_zookeeper:2181"
    networks:
      - kafka
      - zookeeper
    deploy:
      resources:
        reservations:
          cpus: '0.2'
          memory: '1G'
        limits:
          cpus: '0.3'
          memory: '2G'
#   kafka-exporter:
#    image: danielqsj/kafka-exporter:latest
#    deploy:
#      mode: global
#      update_config:
#        parallelism: 1
#        delay: 10s
#      placement:
#        constraints: *kafka_constraints
 
  haproxy:
    image: million12/haproxy:1.7.5
    depends_on:
      - kafka
#      - zookeeper
      - kafka-manager
#    links:
#      - "zookeeper:zookeeper"
#      - "kafka:kafka"
#      - "kafkaManager:kafkamanager"
    ports:
      - "9092:9092"
      - "1099:1099"
      - "9000:9000"
    configs:
      - source: haproxy.cfg
        target: /etc/haproxy/haproxy.cfg
    networks:
      - kafka
      - zookeeper

configs:
  haproxy.cfg:
    file: ./haproxy.cfg
  # Backport version - fixes JMX env. substitution problem
  start-kafka.sh:
    file: ./start-kafka.sh
 
networks:
  kafka:
  zookeeper:
    external:
      name: ${ZOOKEEPER_NETWORK_NAME:-zookeeper}

